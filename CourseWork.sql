CREATE DATABASE IFS;
USE IFS;

CREATE TABLE SOFTWARE_PROJECT 
(
    Project_Code varchar(10) PRIMARY KEY CONSTRAINT p_id CHECK (Project_Code LIKE 'P%'),
    Project_Name varchar(50) NOT NULL, 
    Duration varchar(10) NOT NULL
);
select * from SOFTWARE_PROJECT;

CREATE TABLE SOFTWARE_ENGINEER
(
    Emp_No varchar(10) PRIMARY KEY,
    Emp_Name varchar(50),
    Emp_Experience int,
    Emp_Salary int,
    Proj_ID varchar(10) REFERENCES SOFTWARE_PROJECT(Project_Code)
);


-- Add a new column '[TP]' to table '[SOFTWARE_ENGINEER]' in schema '[dbo]'
ALTER TABLE [dbo].[SOFTWARE_ENGINEER]
    ADD [TP] /*new_column_name*/ int /*new_column_datatype*/ NULL /*new_column_nullability*/
GO
select * from SOFTWARE_ENGINEER

INSERT INTO SOFTWARE_PROJECT VALUES
('P1',  'Brandix HR Software',  '6M'),
('P2',  'MAS HR Software',      '4M'),
('P3',  'CEAT Leaves Software', '5M');

INSERT INTO SOFTWARE_ENGINEER VALUES
('E100',    'Gayan',    02, 65000, 'P1', 077),
('E200',    'Waruna',   05, 98000, 'P1', 071),
('E300',    'Amila',    06, 12500, 'P2', 076),
('E400',    'Aravinda', 01, 45000, 'P3', 075);

/* --ERROR
UPDATE SOFTWARE_ENGINEER
SET Emp_Salary = 200000 AND Emp_Experience = 05
WHERE Emp_No = 'E100';
*/
SELECT * FROM SOFTWARE_ENGINEER;
SELECT * FROM SOFTWARE_ENGINEER
ORDER BY Emp_Name, Emp_No DESC;

SELECT * FROM SOFTWARE_ENGINEER
WHERE Emp_Salary BETWEEN 40000 AND 65000 OR Emp_Experience > 3;

SELECT Emp_Name FROM SOFTWARE_ENGINEER
WHERE Emp_Name LIKE 'G%';

DROP TABLE SOFTWARE_PROJECT; -- WON'T WORK SINCE IT IS REFERENCED BY ANOTHER TABLE

SELECT MAX(Emp_Salary) FROM SOFTWARE_ENGINEER;

SELECT Proj_ID, SUM(Emp_Salary) as TOTAL 
FROM SOFTWARE_ENGINEER
GROUP BY Proj_ID
ORDER BY SUM(Emp_Salary) DESC;

SELECT PROJ_id, SUM(Emp_Salary) AS TOTAL 
FROM SOFTWARE_ENGINEER
GROUP BY Proj_ID;

/*
SELECT ALL FROM SOFTWARE_PROJECT; -- DOESN'T EXECUTE
*/

DROP TABLE SOFTWARE_ENGINEER; -- WILL DESTROY THE TABLE

/*
DELETE FROM SOFTWARE_ENGINEER 
WHERE Emp_Salary < 10000        -- WON'T RUN, SPELLING MISTAKE
GROUP BY Pro_ID;
*/

UPDATE SOFTWARE_ENGINEER 
SET Emp_Salary = (Emp_Salary * 0.2) + Emp_Salary;

SELECT MIN(Emp_Salary)
FROM SOFTWARE_ENGINEER 
where proj_ID = 'P1';

SELECT proj_ID, COUNT(Emp_No)
FROM SOFTWARE_ENGINEER 
GROUP BY proj_ID;

SELECT Proj_ID, AVG(Emp_Salary) AS AVERAGE
FROM SOFTWARE_ENGINEER 
GROUP BY PROJ_ID;

SELECT EMP_NO, EMP_NAME
FROM SOFTWARE_ENGINEER
WHERE EMP_SALARY > 55000;

DELETE FROM SOFTWARE_ENGINEER 
WHERE EMP_SALARY < 65000

TRUNCATE TABLE SOFTWARE_ENGINEER

SELECT * FROM SOFTWARE_ENGINEER
WHERE Emp_NAME LIKE '%a%'

SELECT AVG(Emp_Salary)
FROM SOFTWARE_ENGINEER 
WHERE Emp_Experience < 5;